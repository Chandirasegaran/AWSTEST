version: 0.2

env:
  variables:
    APP_NAME: "my-spring-boot-app"
    AWS_REGION: "us-east-1"
    ECR_REPOSITORY_URI: "426065088228.dkr.ecr.us-east-1.amazonaws.com/newrepo"
    ECS_CLUSTER_NAME: "Demoo"
    ECS_SERVICE_NAME: "demoop"
  # parameter-store:
  #   AWS_ACCESS_KEY_ID: "/CodeBuild/ACCESS_KEY_ID"
  #   AWS_SECRET_ACCESS_KEY: "/CodeBuild/SECRET_ACCESS_KEY"

phases:
  install:
    runtime-versions:
      java: corretto8
    commands:
      - echo "Installing dependencies..."
      - apt-get update -y
      - apt-get install -y jq
  pre_build:
    commands:
      - mvn clean install
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 426065088228.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=426065088228.dkr.ecr.us-east-1.amazonaws.com/newrepo
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest -f Dockerfile .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"resttest","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
   - imagedefinitions.json
  #  - target/restapitest-0.0.1-SNAPSHOT.jar
